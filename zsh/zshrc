#
# Settings for interactive shells
#

#
# ZSH Options (man zshoptions)
# Use `setopt` to see which options are set different from the ZSH defaults.
# Use `set -o` to see all options.
#

#setopt interactive_comments

#
# Aliases
#

# Print each PATH entry on a separate line
alias path='echo -e ${PATH//:/\\n}'

# Moving around directories a bit easier
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

# Listing files
alias ll='ls -lha'
alias fd='find . -type d -name' # find by directory name
alias ff='find . -type f -name' # find by filename
alias duf='du -sh *' # list current directory with size on disk
alias biggest='du -s ./* | sort -nr | awk '\''{print $2}'\'' | xargs du -sh' # list current directory with size on disk (descending)
alias dud='du -d 1 -h' # list directories in current directory with size on disk
alias dux='du -x -d 1 | sort -n' # list directories in current directory with size on disk (ascending)
alias ccat='bat --plain --paging=never' # syntax highlighted cat, using bat

# Working with archives
alias tarls="tar -tvf"
alias untar="tar -xf"

# Date and time helpers
alias timestamp="date '+%Y-%m-%d %H:%M:%S'"
alias datestamp="date '+%Y-%m-%d'"
alias isodate="date +%Y-%m-%dT%H:%M:%S%z"
alias utc="date -u +%Y-%m-%dT%H:%M:%SZ"
alias unixepoch="date +%s"

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ipconfig getifaddr en0"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# URL-encode strings
alias urlencode='python3 -c "import sys, urllib.parse as ul; print (ul.quote_plus(sys.argv[1]))"'
alias urldecode='python3 -c "import sys, urllib.parse as ul; print(ul.unquote_plus(sys.argv[1]))"'

# Pretty manpages
alias man='batman'

# Local static webserver
alias serve='caddy file-server'

#
# Homebrew completions support
# See: https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh
#
# This will put many completion functions on the $fpath. These completion functions need to be in scope when later
# compinit is called (in the ZSH plugins).
#
if type brew &>/dev/null
then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
fi

#
# 1Password CLI completions
#
eval "$(op completion zsh)"; # compdef _op op

#
# fnm - Fast Node Manager
#
eval "$(fnm env --use-on-cd)"

#
# Rust
#
if [ -f ~/.cargo/env ]; then
    source ~/.cargo/env
fi

#
# Antidote - ZSH plugin manager
#
source ${HOME}/.dotfiles/zsh/antidote/antidote.zsh
# Statically load plugins listed in ./zsh_plugins
antidote load ${HOME}/.dotfiles/zsh/zsh_plugins

#
# Completion system styles (preferences)
# More info: `man zshcompsys` (search for "Standard Styles")
#
# These are set after compinit is called.
# Use `zstyle -L ':completion:*'` to see which completion styles are already set for the completion system.
#
# The order of tags: ':completion:function:completer:command:argument:tag'
#

# Add completing strategies. The default is `_complete _ignored`
zstyle ':completion:*' completer _extensions _complete _match _prefix _ignored _correct _approximate

# Allow you to select completions from a menu (highlight current completion, naviagte with arrow keys, etc)
zstyle ':completion:*' menu select
bindkey '^[[Z' reverse-menu-complete  # Shift+Tab to move backwards in the menu

# Configure matching for completions
#
# A match pattern is used to filter the possible completions, resulting in the matches offered to the user.
# The system works by trying each item in the matcher-list to generalize the match pattern and find matches. If there
# are no matches, then the next item in the matcher-list is tried.
#
# 1. Case-sensitive prefix match,
# 2. Case-insensitive prefix match,
# 3. Case-sensitive word match (where words are separated by ., _, or -),
# 4. Case-sensitive substring match.
#
# In all honesty, I don't understand the syntax, but I trust the following comment author:
# https://www.reddit.com/r/zsh/comments/11dqx3e/comment/jadcbyz/
zstyle ':completion:*' matcher-list '' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'r:|=*' 'l:|=* r:|=*'

# Autocomplete options for cd (and related functions) instead of directory stack. I don't really use directory stacks
# so showing completion for options/flags is more useful.
zstyle ':completion:*' complete-options true
# When completing with filenames, show the most recently modified files first
zstyle ':completion:*' file-sort modification

# Completions for processes, for commands like `kill`. The default calls `ps`, which only finds processes that have
# "controlling terminals", which does not include macOS apps. By adding the -u flag, we can find many more processes.
# The -w -w flags displays the full command names (without regard for the window size).
zstyle ':completion:*:*:*:*:processes' command "ps -u $USERNAME -o pid,user,comm -w -w"
# Colorize the completions for `kill`
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'

# Completion for host names in several commands
# The following style might not be needed because /usr/share/zsh/5.9/functions/_hosts seems to provide a way to scan
# ~/.ssh/known_hosts and .ssh/config for completion.
# TODO: Let's test it out once those files exist. I've verified the default offers completions for hosts in /etc/hosts.
# zstyle -e ':completion:*:(ssh|scp|sftp|rsh|rsync):hosts' hosts 'reply=(${=${${(f)"$(cat {/etc/ssh_,~/.ssh/known_}hosts(|2)(N) /dev/null)"}%%[# ]*}//,/ })'

# Translation of the BSD-based LSCOLORS default to the GNU/Linux-based LS_COLORS
# https://geoff.greer.fm/lscolors/
export LS_COLORS="di=34:ln=35:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43"
# Colors for files and directory
zstyle ':completion:*:*:*:*:default' list-colors ${(s.:.)LS_COLORS}

# Only display some tags for the command cd (exclude named-directories).
# This seems like a good idea, although I don't see myself creating any named directories.
zstyle ':completion:*:*:cd:*' tag-order local-directories directory-stack path-directories

# Group completions by tag (such as files, arguments, builtins, commands, etc)
zstyle ':completion:*' group-name ''

# Get some debugging messages out of the completion system
zstyle ':completion:*:*:*:*:corrections' format '%F{yellow}!- %d (errors: %e) -!%f'
zstyle ':completion:*:*:*:*:descriptions' format '%F{blue}-- %d --%f'
zstyle ':completion:*:*:*:*:messages' format ' %F{purple} -- %d --%f'
zstyle ':completion:*:*:*:*:warnings' format ' %F{red}-- no matches found --%f'

# TODO: Try this out and see what kinds of additional info it makes appear
# zstyle ':completion:*' verbose yes

#
# Pure prompt (https://github.com/sindresorhus/pure)
#
autoload -U promptinit; promptinit
# ... any pure customization goes here ...
prompt pure
